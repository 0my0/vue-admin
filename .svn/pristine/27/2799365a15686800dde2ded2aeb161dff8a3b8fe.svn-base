{"remainingRequest":"E:\\vueProject\\admin\\vue-element-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\vueProject\\admin\\vue-element-admin\\src\\views\\system-manager\\webconfig\\game-config.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\vueProject\\admin\\vue-element-admin\\src\\views\\system-manager\\webconfig\\game-config.vue","mtime":1576226617593},{"path":"E:\\vueProject\\admin\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vueProject\\admin\\vue-element-admin\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vueProject\\admin\\vue-element-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\vueProject\\admin\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vueProject\\admin\\vue-element-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport SystemManager from  '@/api/system-manager'\nimport { getToken} from  '@/utils/auth'\nimport toJsonData from '@/api/jsonformdata'\nexport default {\n  name:'game-config',\n  data(){\n    return{\n      tableData: [],\n      formLabelWidth: '120px',\n      token: getToken(),\n      siteId:'',\n      gameEditForm: {\n        game_ids: []\n      }\n    }\n  },\n  methods: {\n    gameConfig(){\n      SystemManager.getGameConfigIndex(this.siteId,this.token).then(data => {\n        this.tableData=data.data\n      })\n    },\n    saveChange() {\n      this.gameEditForm.game_ids = [];\n      this.tableData.forEach(item => {\n        if(item.is_have == true){\n          this.gameEditForm.game_ids.push(item.game_id)\n        }\n      })\n     const postData = toJsonData.JsonData(this.gameEditForm);\n      SystemManager.saveGameConfigIndex(postData,this.siteId,this.token).then(data=> {\n        this.$message({\n          message: data.data.log,\n          type: 'success'\n        })\n        this.gameConfig();\n      }).catch(error => {\n        console.log(error)\n      })\n    },\n  },\n  created(){\n    this.gameConfig();\n  },\n  watch: {\n    $route: {\n      handler: function(route) {\n        this.siteId = this.$route.query.id;\n      },\n      immediate: true\n    }\n  }\n}\n",null]}
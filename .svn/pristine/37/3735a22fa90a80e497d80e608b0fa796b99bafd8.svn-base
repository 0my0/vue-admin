{"remainingRequest":"E:\\vueProject\\admin\\vue-element-admin\\node_modules\\babel-loader\\lib\\index.js!E:\\vueProject\\admin\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\vueProject\\admin\\vue-element-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\vueProject\\admin\\vue-element-admin\\src\\views\\system-manager\\payment-method-config.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\vueProject\\admin\\vue-element-admin\\src\\views\\system-manager\\payment-method-config.vue","mtime":1576646322784},{"path":"E:\\vueProject\\admin\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vueProject\\admin\\vue-element-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\vueProject\\admin\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vueProject\\admin\\vue-element-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"E:\\\\vueProject\\\\admin\\\\vue-element-admin\\\\node_modules\\\\@babel\\\\runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.function.name\");\n\nvar _systemManager = _interopRequireDefault(require(\"@/api/system-manager\"));\n\nvar _auth = require(\"@/utils/auth\");\n\nvar _jsonformdata = _interopRequireDefault(require(\"@/api/jsonformdata\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'payment-method-config',\n  data: function data() {\n    return {\n      tableData: [],\n      token: (0, _auth.getToken)(),\n      dialogFormVisible: false,\n      formLabelWidth: '120px',\n      editPaymentForm: {\n        name: '',\n        code: '',\n        is_open: false\n      },\n      dialogType: 'add',\n      payment_id: ''\n    };\n  },\n  methods: {\n    getPaymentMethod: function getPaymentMethod() {\n      var _this = this;\n\n      _systemManager.default.getPaymentMethod(this.token).then(function (data) {\n        _this.tableData = data.data;\n      });\n    },\n    showDialog: function showDialog() {\n      this.editPaymentForm = {\n        name: '',\n        code: '',\n        is_open: false\n      };\n      this.dialogFormVisible = true;\n      this.dialogType = 'add';\n    },\n    closeDialog: function closeDialog() {\n      this.dialogFormVisible = false;\n    },\n    createPaymentMethod: function createPaymentMethod() {\n      var _this2 = this;\n\n      var postData = _jsonformdata.default.JsonData(this.editPaymentForm);\n\n      if (this.dialogType == 'add') {\n        _systemManager.default.createPaymentMethod(postData, this.token).then(function (data) {\n          _this2.$message({\n            message: data.data.log,\n            type: 'success'\n          });\n\n          _this2.closeDialog();\n\n          _this2.getPaymentMethod();\n        }).catch(function (error) {\n          console.log(error);\n        });\n      } else {\n        _systemManager.default.editPaymentMethod(this.payment_id, postData, this.token).then(function (data) {\n          _this2.$message({\n            message: data.data.log,\n            type: 'success'\n          });\n\n          _this2.closeDialog();\n\n          _this2.getPaymentMethod();\n        }).catch(function (error) {\n          console.log(error);\n        });\n      }\n    },\n    editPaymentMethod: function editPaymentMethod(row) {\n      this.dialogType = 'edit';\n      this.dialogFormVisible = true;\n      this.payment_id = row.payment_id;\n      var isOpen = false;\n\n      if (row.is_open == 'true') {\n        isOpen = true;\n      } else {\n        isOpen = false;\n      }\n\n      this.editPaymentForm = {\n        name: row.name,\n        code: row.code,\n        is_open: isOpen\n      };\n    }\n  },\n  created: function created() {\n    this.getPaymentMethod();\n  }\n};\nexports.default = _default;",null]}
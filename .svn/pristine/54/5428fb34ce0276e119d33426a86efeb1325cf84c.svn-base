{"remainingRequest":"E:\\vueProject\\admin\\vue-element-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\vueProject\\admin\\vue-element-admin\\src\\layout\\components\\Navbar.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\vueProject\\admin\\vue-element-admin\\src\\layout\\components\\Navbar.vue","mtime":1577175532875},{"path":"E:\\vueProject\\admin\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vueProject\\admin\\vue-element-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\vueProject\\admin\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vueProject\\admin\\vue-element-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapGetters } from 'vuex'\nimport Breadcrumb from '@/components/Breadcrumb'\nimport Hamburger from '@/components/Hamburger'\nimport ErrorLog from '@/components/ErrorLog'\nimport Screenfull from '@/components/Screenfull'\nimport SizeSelect from '@/components/SizeSelect'\nimport Search from '@/components/HeaderSearch'\nimport refresh from '@/api/user'\nimport { getToken,removeToken } from '@/utils/auth'\nimport router, { resetRouter } from '@/router'\nexport default {\n  components: {\n    Breadcrumb,\n    Hamburger,\n    ErrorLog,\n    Screenfull,\n    SizeSelect,\n    Search\n  },\n  computed: {\n    ...mapGetters([\n      'sidebar',\n      'avatar',\n      'device'\n    ])\n  },\n  data(){\n    return{\n      token: getToken(),\n      websock:null\n    }\n  },\n  methods: {\n    toggleSideBar() {\n      this.$store.dispatch('app/toggleSideBar')\n    },\n    async logout() {\n      await this.$store.dispatch('user/logout')\n      // removeToken(this.token);\n      // commit('SET_TOKEN', '')\n      // commit('SET_ROLES', [])\n      // removeToken()\n      // resetRouter()\n      this.$router.push(`/login?redirect=${this.$route.fullPath}`)\n    },\n    refresh() {\n      refresh(this.token).then(data => {\n        this.$message({\n          message: data.data.log,\n          type: 'success'\n        })\n      })\n    },\n    initWebSocket() {\n      const wsuri = \"ws://47.91.87.125:2346?token=123\";\n      this.websock = new WebSocket(wsuri);\n      this.websock.onmessage = this.websocketonmessage;\n      this.websock.onopen = this.websocketonopen;\n      this.websock.onerror = this.websocketonerror;\n      this.websock.onclose = this.websocketclose;\n    },\n    showMsgNotification(title, msg) {\n      var Notification = window.Notification || window.mozNotification || window.webkitNotification;\n      if (Notification) {\n        if (Notification.permission == \"granted\") {  //已经允许通知\n          var instance = new Notification(title, {\n            body: msg,\n            icon: \"/static/images/ico.jpg\",\n          });\n          instance.onclick = function () {\n            //$('body').css({'background': 'red'});\n            //console.log('onclick');\n            instance.close();\n          };\n          instance.onerror = function () {\n            //console.log('onerror');\n          };\n          instance.onshow = function () {\n            // 窗口显示 播放音频\n            var audio = new Audio(\"./10418.wav\");\n            audio.play();\n            // 窗口显示3S后关闭\n            setTimeout(function(){\n              notify.close();\n            },3000);\n          };\n          instance.onclose = function () {\n            //console.log('onclose');\n          };\n        } else {\n          //第一次询问或已经禁止通知(如果用户之前已经禁止显示通知，那么浏览器不会再次询问用户的意见，Notification.requestPermission()方法无效)\n          Notification.requestPermission(function (status) {\n            //用户允许\n            if (status === \"granted\") {\n              var instance = new Notification(title, {\n                body: msg,\n                icon: \"images/reload.png\"\n              });\n\n              instance.onclick = function () {\n                // Something to do\n              };\n              instance.onerror = function () {\n                // Something to do\n              };\n              instance.onshow = function () {\n                // Something to do\n              };\n              instance.onclose = function () {\n                // Something to do\n              };\n              //用户禁止\n            } else {\n              return false\n            }\n          });\n        }\n      } else {\n        //不支持(IE等)\n        var index = 0;\n        clearInterval(timer);\n        timer = setInterval(function () {\n          if (index % 2) {\n            $('title').text('【　　　】' + title);//这里是中文全角空格，其他不行\n          } else {\n            $('title').text('【新消息】' + title);\n          }\n          index++;\n\n          if (index > 20) {\n            clearInterval(timer);\n          }\n        }, 500);\n      }\n    },\n    websocketonmessage(e) {\n      //SOCKET收到信息\n      const redata = JSON.parse(e.data);\n      //this.showMsgNotification('新订单', redata.msg)\n      switch (redata.type) {\n        case 'self':\n          localStorage.setItem('client_id', redata.msg)\n          break\n        case 'ping':\n          console.log('ping')\n          break\n        case 'logout':\n          console.log('logout' + redata.msg)\n        case 'ORDER':\n          console.log('add order')\n          this.showMsgNotification('新订单111', redata.orderInfo.order_no)\n      }\n    },\n    websocketonopen() {\n      console.log('发送数据')\n      let actions = {\"type\":\"ping\"};\n      setInterval(this.ping,3000);\n    },\n    websocketonerror() {\n      this.initWebSocket();\n    },\n    websocketsend(Data){\n      console.log('ping')\n      this.websock.send(Data);\n    },\n    websocketclose(e){\n      console.log('断开连接',e)\n    },\n    ping(){\n      console.log('ping')\n      this.websock.send('{\"type\":\"ping\"}');\n    }\n  },\n  created() {\n    this.initWebSocket();\n  }\n}\n",null]}
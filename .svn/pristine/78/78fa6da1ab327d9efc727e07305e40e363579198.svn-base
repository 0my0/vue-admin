{"remainingRequest":"E:\\vueProject\\admin\\vue-element-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\vueProject\\admin\\vue-element-admin\\src\\layout\\components\\Navbar.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\vueProject\\admin\\vue-element-admin\\src\\layout\\components\\Navbar.vue","mtime":1573897255734},{"path":"E:\\vueProject\\admin\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vueProject\\admin\\vue-element-admin\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vueProject\\admin\\vue-element-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\vueProject\\admin\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vueProject\\admin\\vue-element-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapGetters } from 'vuex'\nimport Breadcrumb from '@/components/Breadcrumb'\nimport Hamburger from '@/components/Hamburger'\nimport ErrorLog from '@/components/ErrorLog'\nimport Screenfull from '@/components/Screenfull'\nimport SizeSelect from '@/components/SizeSelect'\nimport Search from '@/components/HeaderSearch'\nimport refresh from '@/api/user'\nimport { getToken,removeToken } from '@/utils/auth'\nimport router, { resetRouter } from '@/router'\nexport default {\n  components: {\n    Breadcrumb,\n    Hamburger,\n    ErrorLog,\n    Screenfull,\n    SizeSelect,\n    Search\n  },\n  computed: {\n    ...mapGetters([\n      'sidebar',\n      'avatar',\n      'device'\n    ])\n  },\n  data(){\n    return{\n      token: getToken(),\n    }\n  },\n  methods: {\n    toggleSideBar() {\n      this.$store.dispatch('app/toggleSideBar')\n    },\n    async logout() {\n      await this.$store.dispatch('user/logout')\n      // removeToken(this.token);\n      // commit('SET_TOKEN', '')\n      // commit('SET_ROLES', [])\n      // removeToken()\n      // resetRouter()\n      this.$router.push(`/login?redirect=${this.$route.fullPath}`)\n    },\n    refresh() {\n      refresh(this.token).then(data => {\n        this.$message({\n          message: data.data.log,\n          type: 'success'\n        })\n      })\n    }\n  }\n}\n",null]}
{"remainingRequest":"E:\\vueProject\\admin\\vue-element-admin\\node_modules\\babel-loader\\lib\\index.js!E:\\vueProject\\admin\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\vueProject\\admin\\vue-element-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\vueProject\\admin\\vue-element-admin\\src\\views\\sales\\first-hand\\gold-order-manager\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\vueProject\\admin\\vue-element-admin\\src\\views\\sales\\first-hand\\gold-order-manager\\index.vue","mtime":1579074878167},{"path":"E:\\vueProject\\admin\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vueProject\\admin\\vue-element-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\vueProject\\admin\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vueProject\\admin\\vue-element-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"E:\\\\vueProject\\\\admin\\\\vue-element-admin\\\\node_modules\\\\@babel\\\\runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nvar _vueQuillEditor = require(\"vue-quill-editor\");\n\nvar _systemManager = _interopRequireDefault(require(\"@/api/system-manager\"));\n\nvar _sales = _interopRequireDefault(require(\"@/api/sales\"));\n\nvar _auth = require(\"@/utils/auth\");\n\nvar _jsonformdata = _interopRequireDefault(require(\"@/api/jsonformdata\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar date = new Date(new Date().toLocaleDateString());\nvar data1 = new Date(new Date(new Date().toLocaleDateString()).getTime() + 24 * 60 * 60 * 1000);\nvar date_value = date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate() + ' ' + date.getHours() + ':' + date.getMinutes() + ':' + date.getSeconds();\nvar date1_value = data1.getFullYear() + '-' + (data1.getMonth() + 1) + '-' + data1.getDate() + ' ' + data1.getHours() + ':' + data1.getMinutes() + ':' + data1.getSeconds();\nvar _default = {\n  name: 'gold-order-manager',\n  data: function data() {\n    var _this = this;\n\n    return {\n      formInline: {\n        stime: date_value,\n        ltime: date1_value,\n        site_id: [],\n        games: '',\n        code: [],\n        which_select: '',\n        select_value: '',\n        is_coupon: false,\n        status: []\n      },\n      editMailForm: {\n        order_number: '',\n        email: '',\n        title: '',\n        content: ''\n      },\n      editorOption: {},\n      optionVisible: false,\n      isDisabled: false,\n      isFreed: true,\n      mandatoryReceipt: true,\n      orderAmount: '',\n      usdAmount: '',\n      cadAmount: '',\n      audAmount: '',\n      eurAmount: '',\n      gbpAmount: '',\n      youhuiAmount: '',\n      currentPage: 1,\n      totalCount: 1,\n      pageSize: 50,\n      tableData: [],\n      statusData: [],\n      token: (0, _auth.getToken)(),\n      checSitekAll: false,\n      checkGameAll: false,\n      checkPaymentAll: false,\n      isIndeterminate: true,\n      isOrderPay: true,\n      dialogEditFormVisible: false,\n      formLabelWidth: '130px',\n      adminId: '',\n      dialogTableVisible: false,\n      dialogTableType: 'handle',\n      left: '0px',\n      top: '0px',\n      siteData: [],\n      gameData: [],\n      orderId: '',\n      selectData: [{\n        title: '玩家邮箱',\n        name: 'email'\n      }, {\n        title: '流水号',\n        name: 'orderno'\n      }, {\n        title: '订单号',\n        name: 'order_number'\n      }, {\n        title: '付款邮箱',\n        name: 'pay_email'\n      }, {\n        title: '付款姓名',\n        name: 'name'\n      }, {\n        title: 'Coupon',\n        name: 'coupon'\n      }],\n      handleOrderForm: {\n        order_number: '',\n        amount: '',\n        status: '',\n        note: '',\n        order_no: '',\n        service: ''\n      },\n      handleStatusData: [],\n      paymentData: [],\n      pickerOptionsStart: {\n        disabledDate: function disabledDate(time) {\n          var endDateVal = new Date(_this.formInline.ltime).getTime();\n\n          if (endDateVal) {\n            return time.getTime() > endDateVal - 0;\n          }\n\n          return time.getTime() < Date.now() - 8.64e7;\n        }\n      },\n      pickerOptionsEnd: {\n        disabledDate: function disabledDate(time) {\n          var beginDateVal = new Date(_this.formInline.stime).getTime();\n\n          if (beginDateVal) {\n            return time.getTime() < beginDateVal - 0;\n          }\n        }\n      }\n    };\n  },\n  methods: {\n    handleCheckAllChange: function handleCheckAllChange(val) {\n      var siteId = [];\n      this.siteData.forEach(function (item) {\n        siteId.push(item.site_id);\n      });\n      this.formInline.site_id = val ? siteId : [];\n      this.isIndeterminate = false;\n    },\n    sendPost: function sendPost() {\n      this.dialogEditFormVisible = true;\n    },\n    sendMail: function sendMail() {\n      var _this2 = this;\n\n      var postData = _jsonformdata.default.JsonData(this.editMailForm);\n\n      _sales.default.sendMail(postData, this.orderId, this.token).then(function (data) {\n        console.log(data);\n\n        _this2.$message({\n          message: data.data.log,\n          type: 'success'\n        });\n\n        _this2.searchOrder();\n\n        _this2.closeDialog();\n      });\n    },\n    onEditorBlur: function onEditorBlur() {//失去焦点事件\n    },\n    onEditorFocus: function onEditorFocus() {//获得焦点事件\n    },\n    onEditorChange: function onEditorChange() {//内容改变事件\n    },\n    tableRowClassName: function tableRowClassName(row, index) {\n      if (row.row.status === '完成' || row.row.status === '追回') {\n        return 'success-row';\n      } else if (row.row.status === '待验证') {\n        return 'verified-row';\n      } else if (row.row.status === '作废' || row.row.status === '退款') {\n        return 'abandoned-row';\n      } else if (row.row.status === '欺诈订单' || row.row.status === '问题订单' || row.row.status === '信息错误') {\n        return 'request-row';\n      } else if (row.row.status === '发货中') {\n        return 'printing-row';\n      }\n    },\n    handleSizeChange: function handleSizeChange(val) {\n      this.pageSize = val;\n      this.searchLimitOrder(val);\n    },\n    payOrder: function payOrder() {\n      if (!this.isOrderPay) {\n        this.dialogTableType = 'pay';\n        this.dialogTableVisible = true;\n      }\n    },\n    goldDeatilLink: function goldDeatilLink(index, row) {\n      this.orderId = row.order_id;\n      this.$router.push({\n        path: \"/sales/first-hand/gold-order-detail\",\n        query: {\n          id: this.orderId\n        }\n      });\n    },\n    handleSignOrder: function handleSignOrder() {\n      if (this.isDisabled) {} else {\n        this.signOrder();\n        this.dialogTableType = 'handle';\n        this.dialogTableVisible = true;\n      }\n    },\n    handleOrder: function handleOrder() {\n      if (this.isFreed) {} else {\n        this.dialogTableType = 'handle';\n        this.dialogTableVisible = true;\n      }\n    },\n    searchLimitOrder: function searchLimitOrder(val) {\n      var _this3 = this;\n\n      var postData = _jsonformdata.default.JsonData(this.formInline);\n\n      _sales.default.searchLimitOrder(postData, val, this.currentPage, this.token).then(function (data) {\n        _this3.tableData = data.data;\n        _this3.totalCount = parseInt(data.count);\n        _this3.orderAmount = data.amount + '(USD)';\n        _this3.usdAmount = data.USD + 'USD';\n        _this3.cadAmount = data.CAD + 'CAD';\n        _this3.audAmount = data.AUD + 'AUD';\n        _this3.eurAmount = data.EUR + 'EUR';\n        _this3.gbpAmount = data.GBP + 'GBP';\n        _this3.youhuiAmount = data.youhui + 'USD';\n      });\n    },\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.currentPage = val;\n      this.searchPageOrder(val);\n    },\n    searchPageOrder: function searchPageOrder(val) {\n      var _this4 = this;\n\n      var postData = _jsonformdata.default.JsonData(this.formInline);\n\n      _sales.default.searchLimitOrder(postData, this.pageSize, val, this.token).then(function (data) {\n        _this4.tableData = data.data;\n        _this4.totalCount = parseInt(data.count);\n        _this4.orderAmount = data.amount + '(USD)';\n        _this4.usdAmount = data.USD + 'USD';\n        _this4.cadAmount = data.CAD + 'CAD';\n        _this4.audAmount = data.AUD + 'AUD';\n        _this4.eurAmount = data.EUR + 'EUR';\n        _this4.gbpAmount = data.GBP + 'GBP';\n        _this4.youhuiAmount = data.youhui + 'USD';\n      });\n    },\n    handleCheckGameAllChange: function handleCheckGameAllChange(val) {\n      var games = [];\n      this.gameData.forEach(function (item) {\n        games.push(item.game_id);\n      });\n      this.formInline.games = val ? games : [];\n      this.isIndeterminate = false;\n    },\n    handleCheckPaymentAllChange: function handleCheckPaymentAllChange(val) {\n      var code = [];\n      this.paymentData.forEach(function (item) {\n        code.push(item.code);\n      });\n      this.formInline.code = val ? code : [];\n      this.isIndeterminate = false;\n    },\n    changeSelect: function changeSelect() {},\n    rightClick: function rightClick(row, column, e) {\n      e.preventDefault();\n      this.publicMenu(e);\n      this.orderId = row.order_id;\n      this.adminId = row.admin_id;\n      this.isDisabled = false;\n      this.isFreed = true;\n      this.isOrderPay = true;\n      this.mandatoryReceipt = true;\n      var adminId = this.token.split('_')[0];\n\n      if (row.admin_id) {\n        this.isDisabled = true;\n\n        if (row.admin_id == adminId) {\n          this.isFreed = false;\n\n          if (row.status == '未支付') {\n            this.isOrderPay = false;\n          }\n        } else {\n          this.mandatoryReceipt = false;\n        }\n      }\n\n      this.handleOrderForm = {\n        order_number: row.order_number,\n        amount: row.amount,\n        status: row.status,\n        order_no: row.order_no,\n        service: row.service,\n        note: ''\n      };\n      this.editMailForm = {\n        order_number: row.order_number,\n        email: row.email,\n        title: '',\n        content: ''\n      };\n      this.getOrderStatus();\n      this.optionVisible = true;\n    },\n    getOrderStatus: function getOrderStatus() {\n      var _this5 = this;\n\n      _sales.default.getOrderStatus(this.orderId, this.token).then(function (data) {\n        _this5.handleStatusData = data.data;\n      });\n    },\n    closeMenu: function closeMenu() {\n      this.optionVisible = false;\n    },\n    closeDialog: function closeDialog() {\n      this.dialogTableVisible = false;\n      this.dialogEditFormVisible = false;\n    },\n    handleGoldOrder: function handleGoldOrder(row) {\n      var _this6 = this;\n\n      var postData = _jsonformdata.default.JsonData(this.handleOrderForm);\n\n      var isHandle = this.dialogTableType === 'handle';\n\n      if (isHandle) {\n        _sales.default.handleGoldOrder(postData, this.orderId, this.token).then(function (data) {\n          _this6.$message({\n            message: data.data.log,\n            type: 'success'\n          });\n\n          _this6.searchOrder();\n\n          _this6.closeDialog();\n        });\n      } else {\n        _sales.default.payOrder(postData, this.orderId, this.token).then(function (data) {\n          _this6.$message({\n            message: data.data.log,\n            type: 'success'\n          });\n\n          _this6.searchOrder();\n\n          _this6.closeDialog();\n        });\n      }\n    },\n    publicMenu: function publicMenu(e) {\n      var menuMinWidth = 105;\n      var offsetLeft = this.$el.getBoundingClientRect().left; // container margin left\n\n      var offsetWidth = this.$el.offsetWidth; // container width\n\n      var maxLeft = offsetWidth - menuMinWidth; // left boundary\n\n      var left = e.clientX - offsetLeft + 15; // 15: margin right\n\n      if (left > maxLeft) {\n        this.left = maxLeft;\n      } else {\n        this.left = left;\n      }\n\n      this.top = e.pageY - 80;\n    },\n    signOrder: function signOrder() {\n      var _this7 = this;\n\n      if (this.isDisabled) {} else {\n        _sales.default.signOrder(this.orderId, this.token).then(function (data) {\n          _this7.$message({\n            message: data.data.log,\n            type: 'success'\n          });\n\n          _this7.searchOrder();\n        });\n      }\n    },\n    mandatoryReceiptOrder: function mandatoryReceiptOrder() {\n      var _this8 = this;\n\n      if (this.mandatoryReceipt) {} else {\n        _sales.default.mandatoryReceiptOrder(this.orderId, this.token).then(function (data) {\n          _this8.$message({\n            message: data.data.log,\n            type: 'success'\n          });\n\n          _this8.searchOrder();\n        });\n      }\n    },\n    freedOrder: function freedOrder() {\n      var _this9 = this;\n\n      if (this.isFreed) {} else {\n        _sales.default.freedOrder(this.orderId, this.token).then(function (data) {\n          _this9.$message({\n            message: data.data.log,\n            type: 'success'\n          });\n\n          _this9.searchOrder();\n        });\n      }\n    },\n    searchOrder: function searchOrder() {\n      var _this10 = this;\n\n      var postData = _jsonformdata.default.JsonData(this.formInline); // this.currentPage = 1;\n\n\n      _sales.default.searchLimitOrder(postData, this.pageSize, this.currentPage, this.token).then(function (data) {\n        _this10.tableData = data.data;\n        _this10.totalCount = parseInt(data.count);\n        _this10.orderAmount = data.amount + '(USD)';\n        _this10.usdAmount = data.USD + 'USD';\n        _this10.cadAmount = data.CAD + 'CAD';\n        _this10.audAmount = data.AUD + 'AUD';\n        _this10.eurAmount = data.EUR + 'EUR';\n        _this10.gbpAmount = data.GBP + 'GBP';\n        _this10.youhuiAmount = data.youhui + 'USD';\n      });\n    },\n    printOrder: function printOrder() {\n      var postData = _jsonformdata.default.JsonData(this.formInline);\n\n      console.log(this.formInline);\n      this.currentPage = 1;\n      window.location.href = '/order/dayin?stime=' + this.formInline.stime + '&ltime=' + this.formInline.ltime + '&site_id=' + this.formInline.site_id + '&games=' + this.formInline.games + '&code=' + this.formInline.code + '&which_select=' + this.formInline.which_select + '&select_value=' + this.formInline.select_value + '&is_coupon=' + this.formInline.is_coupon + '&status=' + this.formInline.status + '&num=' + this.pageSize + '&p=' + this.currentPage + '&token=' + this.token; // Sales.printOrder(postData,this.token).then(data => {\n      //   this.tableData = data.data;\n      //   this.totalCount = parseInt(data.count)\n      //   this.orderAmount = data.amount + '(USD)';\n      //   this.usdAmount = data.USD + 'USD';\n      //   this.cadAmount = data.CAD +'CAD';\n      //   this.audAmount = data.AUD + 'AUD';\n      //   this.eurAmount = data.EUR + 'EUR';\n      //   this.youhuiAmount = data.youhui + 'USD'\n      // })\n    },\n    getAllstatus: function getAllstatus() {\n      var _this11 = this;\n\n      _sales.default.getAllstatus(this.token).then(function (data) {\n        _this11.statusData = data.data;\n      });\n    },\n    handleCheckedSiteChange: function handleCheckedSiteChange(value) {// let checkedCount = value.length;\n      // this.checSitekAll = checkedCount === this.siteData.length;\n      // this.isIndeterminate = checkedCount > 0 && checkedCount < this.siteData.length;\n    },\n    getGameIndex: function getGameIndex() {\n      var _this12 = this;\n\n      this.formInline.games = [];\n\n      _systemManager.default.getGameIndex(this.token).then(function (data) {\n        _this12.gameData = data.data;\n      });\n    },\n    getSiteIndex: function getSiteIndex() {\n      var _this13 = this;\n\n      _systemManager.default.getSiteIndex(this.token).then(function (data) {\n        _this13.siteData = data.data;\n      });\n    },\n    getPaymentMethod: function getPaymentMethod() {\n      var _this14 = this;\n\n      _systemManager.default.getPaymentMethod(this.token).then(function (data) {\n        _this14.paymentData = data.data;\n      });\n    },\n    getOrderIndex: function getOrderIndex() {\n      var _this15 = this;\n\n      _sales.default.getOrderIndex(this.token).then(function (data) {\n        _this15.tableData = data.data;\n        _this15.totalCount = parseInt(data.count);\n        _this15.orderAmount = data.amount + '(USD)';\n        _this15.usdAmount = data.USD + 'USD';\n        _this15.cadAmount = data.CAD + 'CAD';\n        _this15.audAmount = data.AUD + 'AUD';\n        _this15.eurAmount = data.EUR + 'EUR';\n        _this15.gbpAmount = data.GBP + 'GBP';\n        _this15.youhuiAmount = data.youhui + 'USD';\n      });\n    }\n  },\n  components: {\n    quillEditor: _vueQuillEditor.quillEditor\n  },\n  created: function created() {\n    this.getSiteIndex();\n    this.getGameIndex();\n    this.getPaymentMethod();\n    this.getAllstatus(); // this.getOrderIndex();\n    // this.formInline.which_select = this.selectData[0].title;\n  },\n  activated: function activated() {\n    console.log(this.$route.meta.isUseCache);\n\n    if (!this.$route.meta.isUseCache) {\n      console.log(1111);\n      this.searchOrder();\n      this.$route.meta.isUseCache = false;\n    }\n  },\n  watch: {\n    optionVisible: function optionVisible(value) {\n      if (value) {\n        document.body.addEventListener('click', this.closeMenu);\n      } else {\n        document.body.removeEventListener('click', this.closeMenu);\n      }\n    }\n  }\n};\nexports.default = _default;",null]}
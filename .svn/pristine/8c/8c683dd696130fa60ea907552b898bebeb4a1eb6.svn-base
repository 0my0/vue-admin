{"remainingRequest":"E:\\vueProject\\admin\\vue-element-admin\\node_modules\\babel-loader\\lib\\index.js!E:\\vueProject\\admin\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\vueProject\\admin\\vue-element-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\vueProject\\admin\\vue-element-admin\\src\\layout\\components\\Navbar.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\vueProject\\admin\\vue-element-admin\\src\\layout\\components\\Navbar.vue","mtime":1577175532875},{"path":"E:\\vueProject\\admin\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vueProject\\admin\\vue-element-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\vueProject\\admin\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vueProject\\admin\\vue-element-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"E:\\\\vueProject\\\\admin\\\\vue-element-admin\\\\node_modules\\\\@babel\\\\runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"E:\\\\vueProject\\\\admin\\\\vue-element-admin\\\\node_modules\\\\@babel\\\\runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"regenerator-runtime/runtime\");\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"E:\\\\vueProject\\\\admin\\\\vue-element-admin\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/asyncToGenerator\"));\n\nvar _objectSpread2 = _interopRequireDefault(require(\"E:\\\\vueProject\\\\admin\\\\vue-element-admin\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/objectSpread2\"));\n\nvar _vuex = require(\"vuex\");\n\nvar _Breadcrumb = _interopRequireDefault(require(\"@/components/Breadcrumb\"));\n\nvar _Hamburger = _interopRequireDefault(require(\"@/components/Hamburger\"));\n\nvar _ErrorLog = _interopRequireDefault(require(\"@/components/ErrorLog\"));\n\nvar _Screenfull = _interopRequireDefault(require(\"@/components/Screenfull\"));\n\nvar _SizeSelect = _interopRequireDefault(require(\"@/components/SizeSelect\"));\n\nvar _HeaderSearch = _interopRequireDefault(require(\"@/components/HeaderSearch\"));\n\nvar _user = _interopRequireDefault(require(\"@/api/user\"));\n\nvar _auth = require(\"@/utils/auth\");\n\nvar _router = _interopRequireWildcard(require(\"@/router\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  components: {\n    Breadcrumb: _Breadcrumb.default,\n    Hamburger: _Hamburger.default,\n    ErrorLog: _ErrorLog.default,\n    Screenfull: _Screenfull.default,\n    SizeSelect: _SizeSelect.default,\n    Search: _HeaderSearch.default\n  },\n  computed: (0, _objectSpread2.default)({}, (0, _vuex.mapGetters)(['sidebar', 'avatar', 'device'])),\n  data: function data() {\n    return {\n      token: (0, _auth.getToken)(),\n      websock: null\n    };\n  },\n  methods: {\n    toggleSideBar: function toggleSideBar() {\n      this.$store.dispatch('app/toggleSideBar');\n    },\n    logout: function () {\n      var _logout = (0, _asyncToGenerator2.default)(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.$store.dispatch('user/logout');\n\n              case 2:\n                // removeToken(this.token);\n                // commit('SET_TOKEN', '')\n                // commit('SET_ROLES', [])\n                // removeToken()\n                // resetRouter()\n                this.$router.push(\"/login?redirect=\".concat(this.$route.fullPath));\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function logout() {\n        return _logout.apply(this, arguments);\n      }\n\n      return logout;\n    }(),\n    refresh: function refresh() {\n      var _this = this;\n\n      (0, _user.default)(this.token).then(function (data) {\n        _this.$message({\n          message: data.data.log,\n          type: 'success'\n        });\n      });\n    },\n    initWebSocket: function initWebSocket() {\n      var wsuri = \"ws://47.91.87.125:2346?token=123\";\n      this.websock = new WebSocket(wsuri);\n      this.websock.onmessage = this.websocketonmessage;\n      this.websock.onopen = this.websocketonopen;\n      this.websock.onerror = this.websocketonerror;\n      this.websock.onclose = this.websocketclose;\n    },\n    showMsgNotification: function showMsgNotification(title, msg) {\n      var Notification = window.Notification || window.mozNotification || window.webkitNotification;\n\n      if (Notification) {\n        if (Notification.permission == \"granted\") {\n          //已经允许通知\n          var instance = new Notification(title, {\n            body: msg,\n            icon: \"/static/images/ico.jpg\"\n          });\n\n          instance.onclick = function () {\n            //$('body').css({'background': 'red'});\n            //console.log('onclick');\n            instance.close();\n          };\n\n          instance.onerror = function () {//console.log('onerror');\n          };\n\n          instance.onshow = function () {\n            // 窗口显示 播放音频\n            var audio = new Audio(\"./10418.wav\");\n            audio.play(); // 窗口显示3S后关闭\n\n            setTimeout(function () {\n              notify.close();\n            }, 3000);\n          };\n\n          instance.onclose = function () {//console.log('onclose');\n          };\n        } else {\n          //第一次询问或已经禁止通知(如果用户之前已经禁止显示通知，那么浏览器不会再次询问用户的意见，Notification.requestPermission()方法无效)\n          Notification.requestPermission(function (status) {\n            //用户允许\n            if (status === \"granted\") {\n              var instance = new Notification(title, {\n                body: msg,\n                icon: \"images/reload.png\"\n              });\n\n              instance.onclick = function () {// Something to do\n              };\n\n              instance.onerror = function () {// Something to do\n              };\n\n              instance.onshow = function () {// Something to do\n              };\n\n              instance.onclose = function () {// Something to do\n              }; //用户禁止\n\n            } else {\n              return false;\n            }\n          });\n        }\n      } else {\n        //不支持(IE等)\n        var index = 0;\n        clearInterval(timer);\n        timer = setInterval(function () {\n          if (index % 2) {\n            $('title').text('【　　　】' + title); //这里是中文全角空格，其他不行\n          } else {\n            $('title').text('【新消息】' + title);\n          }\n\n          index++;\n\n          if (index > 20) {\n            clearInterval(timer);\n          }\n        }, 500);\n      }\n    },\n    websocketonmessage: function websocketonmessage(e) {\n      //SOCKET收到信息\n      var redata = JSON.parse(e.data); //this.showMsgNotification('新订单', redata.msg)\n\n      switch (redata.type) {\n        case 'self':\n          localStorage.setItem('client_id', redata.msg);\n          break;\n\n        case 'ping':\n          console.log('ping');\n          break;\n\n        case 'logout':\n          console.log('logout' + redata.msg);\n\n        case 'ORDER':\n          console.log('add order');\n          this.showMsgNotification('新订单111', redata.orderInfo.order_no);\n      }\n    },\n    websocketonopen: function websocketonopen() {\n      console.log('发送数据');\n      var actions = {\n        \"type\": \"ping\"\n      };\n      setInterval(this.ping, 3000);\n    },\n    websocketonerror: function websocketonerror() {\n      this.initWebSocket();\n    },\n    websocketsend: function websocketsend(Data) {\n      console.log('ping');\n      this.websock.send(Data);\n    },\n    websocketclose: function websocketclose(e) {\n      console.log('断开连接', e);\n    },\n    ping: function ping() {\n      console.log('ping');\n      this.websock.send('{\"type\":\"ping\"}');\n    }\n  },\n  created: function created() {\n    this.initWebSocket();\n  }\n};\nexports.default = _default;",null]}
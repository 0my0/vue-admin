{"remainingRequest":"E:\\vueProject\\admin\\vue-element-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\vueProject\\admin\\vue-element-admin\\src\\views\\sales\\first-hand\\gold-order-manager\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\vueProject\\admin\\vue-element-admin\\src\\views\\sales\\first-hand\\gold-order-manager\\index.vue","mtime":1577957124551},{"path":"E:\\vueProject\\admin\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vueProject\\admin\\vue-element-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\vueProject\\admin\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vueProject\\admin\\vue-element-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport SystemManager from  '@/api/system-manager'\nimport Sales from '@/api/sales'\nimport { getToken} from  '@/utils/auth'\nimport toJsonData from '@/api/jsonformdata'\nexport default {\n  name:'gold-order-manager',\n  data() {\n    return{\n      formInline: {\n        stime: '',\n        ltime:'',\n        site_id:[],\n        games: '',\n        code:[],\n        which_select:'',\n        select_value:'',\n        is_coupon:false,\n        status:[]\n      },\n      optionVisible: false,\n      isDisabled:false,\n      isFreed:true,\n      mandatoryReceipt:true,\n      orderAmount:'',\n      usdAmount:'',\n      cadAmount:'',\n      audAmount:'',\n      eurAmount:'',\n      youhuiAmount:'',\n      currentPage:1,\n      totalCount: 1,\n      pageSize:50,\n      tableData:[],\n      statusData:[],\n      token:getToken(),\n      checSitekAll: false,\n      checkGameAll:false,\n      checkPaymentAll:false,\n      isIndeterminate: true,\n      isOrderPay:true,\n      formLabelWidth:'130px',\n      adminId:'',\n      dialogTableVisible:false,\n      dialogTableType: 'handle',\n      left: '0px',\n      top: '0px',\n      siteData: [],\n      gameData:[],\n      orderId:'',\n      selectData: [\n        {\n          title: '玩家邮箱',\n          name:'email'\n        },\n        {\n          title: '流水号',\n          name:'orderno'\n        },\n        {\n          title: '订单号',\n          name:'order_number'\n        },\n        {\n          title:'付款邮箱',\n          name:'pay_email'\n        },\n        {\n          title:'付款姓名',\n          name:'name'\n        },\n        {\n          title:'Coupon',\n          name:'coupon'\n        }\n      ],\n      handleOrderForm:{\n        order_number:'',\n        amount:'',\n        status:'',\n        note:'',\n        order_no:'',\n        service:''\n      },\n      handleStatusData:[],\n      paymentData:[],\n      pickerOptionsStart: {\n        disabledDate:time => {\n          const endDateVal = new Date(this.formInline.ltime).getTime()\n          if (endDateVal) {\n            return time.getTime() > endDateVal - 0\n          }\n          return  time.getTime() < Date.now()-8.64e7;\n        }\n      },\n      pickerOptionsEnd: {\n        disabledDate: time => {\n          const beginDateVal = new Date(this.formInline.stime).getTime()\n          if (beginDateVal) {\n            return time.getTime() < beginDateVal - 0\n          }\n        }\n      }\n    }\n  },\n  methods: {\n    handleCheckAllChange(val) {\n      const siteId = [];\n      this.siteData.forEach(item => {\n        siteId.push(item.site_id);\n      })\n      this.formInline.site_id = val ? siteId : [];\n      this.isIndeterminate = false;\n    },\n    tableRowClassName(row, index) {\n      if(row.row.status === '完成' || row.row.status === '追回'){\n        return 'success-row';\n      }else if(row.row.status === '待验证') {\n        return 'verified-row'\n      }else if(row.row.status === '作废' || row.row.status === '退款') {\n        return 'abandoned-row'\n      }else if(row.row.status === '欺诈订单' || row.row.status === '问题订单' || row.row.status === '信息错误') {\n        return 'request-row'\n      }else if(row.row.status === '发货中') {\n        return 'printing-row'\n      }\n    },\n    handleSizeChange(val) {\n      this.pageSize = val;\n      this.searchLimitOrder(val);\n    },\n    payOrder() {\n      if(!this.isOrderPay) {\n        this.dialogTableType = 'pay';\n        this.dialogTableVisible = true;\n      }\n\n    },\n    handleSignOrder() {\n      if(this.isDisabled) {\n      }else{\n        this.signOrder();\n        this.dialogTableType = 'handle';\n        this.dialogTableVisible = true;\n      }\n    },\n    handleOrder() {\n      if(this.isFreed) {\n      }else{\n        this.dialogTableType = 'handle';\n        this.dialogTableVisible = true;\n      }\n    },\n    searchLimitOrder(val){\n      const postData = toJsonData.JsonData(this.formInline);\n      Sales.searchLimitOrder(postData,val,this.currentPage,this.token).then(data => {\n        this.tableData = data.data;\n        this.totalCount = parseInt(data.count)\n        this.orderAmount = data.amount + '(USD)';\n        this.usdAmount = data.USD + 'USD';\n        this.cadAmount = data.CAD +'CAD';\n        this.audAmount = data.AUD + 'AUD';\n        this.eurAmount = data.EUR = 'EUR';\n        this.youhuiAmount = data.youhui + 'USD'\n      })\n    },\n    handleCurrentChange(val) {\n      this.currentPage = val\n      this.searchPageOrder(val);\n    },\n    searchPageOrder(val) {\n      const postData = toJsonData.JsonData(this.formInline);\n      Sales.searchLimitOrder(postData,this.pageSize,val,this.token).then(data => {\n        this.tableData = data.data;\n        this.totalCount = parseInt(data.count)\n        this.orderAmount = data.amount + '(USD)';\n        this.usdAmount = data.USD + 'USD';\n        this.cadAmount = data.CAD +'CAD';\n        this.audAmount = data.AUD + 'AUD';\n        this.eurAmount = data.EUR = 'EUR';\n        this.youhuiAmount = data.youhui + 'USD'\n      })\n    },\n    handleCheckGameAllChange(val) {\n      const games = [];\n      this.gameData.forEach(item => {\n        games.push(item.game_id);\n      })\n      this.formInline.games = val ? games : [];\n      this.isIndeterminate = false;\n    },\n    handleCheckPaymentAllChange(val){\n      const code = [];\n      this.paymentData.forEach(item => {\n        code.push(item.code);\n      })\n      this.formInline.code= val ? code:[];\n      this.isIndeterminate = false;\n    },\n    changeSelect() {\n\n    },\n    rightClick(row, column, e) {\n      e.preventDefault();\n      this.publicMenu(e);\n      this.orderId = row.order_id;\n      this.adminId = row.admin_id;\n      this.isDisabled = false;\n      this.isFreed = true;\n      this.isOrderPay = true;\n      this.mandatoryReceipt = true;\n      const adminId = this.token.split('_')[0];\n      if(row.admin_id){\n        this.isDisabled = true;\n        if(row.admin_id == adminId) {\n          this.isFreed = false;\n          if(row.status == '未支付') {\n            this.isOrderPay = false;\n          }\n        }else {\n          this.mandatoryReceipt = false;\n        }\n      }\n      this.handleOrderForm={\n        order_number: row.order_number,\n        amount:row.amount,\n        status:row.status,\n        order_no:row.order_no,\n        service:row.service,\n        note:''\n      }\n      this.getOrderStatus();\n      this.optionVisible = true;\n    },\n    getOrderStatus() {\n      Sales.getOrderStatus(this.orderId, this.token).then(data=> {\n        this.handleStatusData = data.data;\n      })\n    },\n    closeMenu() {\n      this.optionVisible = false\n    },\n    closeDialog() {\n      this.dialogTableVisible = false;\n    },\n    handleGoldOrder(row) {\n      const postData = toJsonData.JsonData(this.handleOrderForm);\n      const isHandle = this.dialogTableType === 'handle'\n      if(isHandle){\n        Sales.handleGoldOrder(postData,this.orderId,this.token).then(data => {\n          this.$message({\n            message: data.data.log,\n            type: 'success'\n          })\n          this.searchOrder();\n          this.closeDialog();\n        })\n      }else{\n        Sales.payOrder(postData,this.orderId, this.token).then(data => {\n          this.$message({\n            message: data.data.log,\n            type: 'success'\n          })\n          this.searchOrder();\n          this.closeDialog();\n        })\n      }\n\n    },\n    publicMenu(e){\n      const menuMinWidth = 105\n      const offsetLeft = this.$el.getBoundingClientRect().left // container margin left\n      const offsetWidth = this.$el.offsetWidth // container width\n      const maxLeft = offsetWidth - menuMinWidth // left boundary\n      const left = e.clientX - offsetLeft + 15 // 15: margin right\n      if (left > maxLeft) {\n        this.left = maxLeft\n      } else {\n        this.left = left\n      }\n      this.top = e.pageY - 80\n    },\n    signOrder() {\n      if(this.isDisabled) {\n      }else{\n        Sales.signOrder(this.orderId,this.token).then(data => {\n          this.$message({\n            message: data.data.log,\n            type: 'success'\n          })\n          this.searchOrder();\n        })\n      }\n    },\n    mandatoryReceiptOrder() {\n      if(this.mandatoryReceipt) {\n      }else{\n        Sales.mandatoryReceiptOrder(this.orderId,this.token).then(data => {\n          this.$message({\n            message: data.data.log,\n            type: 'success'\n          })\n          this.searchOrder();\n        })\n      }\n    },\n    freedOrder() {\n      if(this.isFreed) {\n      }else{\n        Sales.freedOrder(this.orderId,this.token).then(data => {\n          this.$message({\n            message: data.data.log,\n            type: 'success'\n          })\n          this.searchOrder();\n        })\n      }\n    },\n    searchOrder() {\n      const postData = toJsonData.JsonData(this.formInline);\n      // this.currentPage = 1;\n      Sales.searchLimitOrder(postData,this.pageSize,this.currentPage,this.token).then(data => {\n        this.tableData = data.data;\n        this.totalCount = parseInt(data.count)\n        this.orderAmount = data.amount + '(USD)';\n        this.usdAmount = data.USD + 'USD';\n        this.cadAmount = data.CAD +'CAD';\n        this.audAmount = data.AUD + 'AUD';\n        this.eurAmount = data.EUR = 'EUR';\n        this.youhuiAmount = data.youhui + 'USD'\n      })\n    },\n    printOrder() {\n      const postData = toJsonData.JsonData(this.formInline);\n      console.log(this.formInline)\n      this.currentPage = 1;\n      window.location.href=\n        '/order/dayin?stime='+this.formInline.stime+'&ltime='+this.formInline.ltime+'&site_id='+this.formInline.site_id+\n        '&games='+this.formInline.games+'&code='+this.formInline.code+'&which_select='+this.formInline.which_select+\n        '&select_value='+this.formInline.select_value+'&is_coupon='+this.formInline.is_coupon+'&status='+this.formInline.status+\n        '&num='+this.pageSize+'&p='+this.currentPage+'&token='+this.token;\n      // Sales.printOrder(postData,this.token).then(data => {\n      //   this.tableData = data.data;\n      //   this.totalCount = parseInt(data.count)\n      //   this.orderAmount = data.amount + '(USD)';\n      //   this.usdAmount = data.USD + 'USD';\n      //   this.cadAmount = data.CAD +'CAD';\n      //   this.audAmount = data.AUD + 'AUD';\n      //   this.eurAmount = data.EUR = 'EUR';\n      //   this.youhuiAmount = data.youhui + 'USD'\n      // })\n\n    },\n\n    getAllstatus() {\n      Sales.getAllstatus(this.token).then(data => {\n          this.statusData = data.data\n      })\n    },\n    handleCheckedSiteChange(value) {\n      // let checkedCount = value.length;\n      // this.checSitekAll = checkedCount === this.siteData.length;\n      // this.isIndeterminate = checkedCount > 0 && checkedCount < this.siteData.length;\n    },\n    getGameIndex() {\n      this.formInline.games = [];\n      SystemManager.getGameIndex(this.token).then(data => {\n        this.gameData=data.data\n      })\n    },\n    getSiteIndex() {\n      SystemManager.getSiteIndex(this.token).then(data => {\n        this.siteData=data.data\n      })\n    },\n    getPaymentMethod() {\n      SystemManager.getPaymentMethod(this.token).then(data => {\n        this.paymentData = data.data;\n      })\n    },\n    getOrderIndex() {\n      Sales.getOrderIndex(this.token).then(data => {\n        this.tableData = data.data;\n        this.totalCount = parseInt(data.count)\n        this.orderAmount = data.amount + '(USD)';\n        this.usdAmount = data.USD + 'USD';\n        this.cadAmount = data.CAD +'CAD';\n        this.audAmount = data.AUD + 'AUD';\n        this.eurAmount = data.EUR = 'EUR';\n        this.youhuiAmount = data.youhui + 'USD'\n      })\n    }\n  },\n  created() {\n    this.getSiteIndex();\n    this.getGameIndex();\n    this.getPaymentMethod();\n    this.getAllstatus();\n    this.getOrderIndex();\n    // this.formInline.which_select = this.selectData[0].title;\n  },\n  watch: {\n    optionVisible(value) {\n      if(value) {\n        document.body.addEventListener('click', this.closeMenu)\n      }else{\n        document.body.removeEventListener('click', this.closeMenu)\n      }\n    }\n  }\n}\n",null]}
{"remainingRequest":"E:\\vueProject\\admin\\vue-element-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\vueProject\\admin\\vue-element-admin\\src\\views\\system-manager\\game-server.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\vueProject\\admin\\vue-element-admin\\src\\views\\system-manager\\game-server.vue","mtime":1577687623743},{"path":"E:\\vueProject\\admin\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vueProject\\admin\\vue-element-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\vueProject\\admin\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vueProject\\admin\\vue-element-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport SystemManager from  '@/api/system-manager'\nimport { getToken} from  '@/utils/auth'\nimport toJsonData from '@/api/jsonformdata'\nexport default {\n  name: 'game-server',\n  data() {\n    return {\n      dialogType: 'add',\n      tableData: [],\n      token: getToken(),\n      dialogEditFormVisible:false,\n      formLabelWidth: '120px',\n      optionVisible: false,\n      editGameForm: {\n        title: '',\n        sku_game: '',\n        is_hidden: false\n      },\n      gameId: '',\n      left: '0px',\n      top: '0px',\n      isHidden: [{'is_hidden': '禁用此游戏'}]\n    }\n  },\n  methods: {\n    handleAddSite() {\n      this.editGameForm= {\n        title: '',\n          sku_game: '',\n          is_hidden: false\n      }\n      this.dialogType = 'add';\n      this.dialogEditFormVisible = true;\n    },\n    handleEditGame() {\n      this.dialogType = 'edit';\n      this.dialogEditFormVisible = true;\n    },\n    rightClick(row, column, e){\n      e.preventDefault();\n      this.publicMenu(e);\n      var isHiddenValue = false;\n      if(row.is_hidden === '0') {\n        isHiddenValue = true\n      }else{\n        isHiddenValue = false\n      }\n      this.gameId = row.game_id;\n      this.editGameForm = {\n        title: row.title,\n        sku_game: row.sku_game,\n        is_hidden: isHiddenValue\n      }\n      this.optionVisible = true\n    },\n    publicMenu(e){\n    const menuMinWidth = 105\n    const offsetLeft = this.$el.getBoundingClientRect().left // container margin left\n    const offsetWidth = this.$el.offsetWidth // container width\n    const maxLeft = offsetWidth - menuMinWidth // left boundary\n    const left = e.clientX - offsetLeft + 15 // 15: margin right\n    if (left > maxLeft) {\n      this.left = maxLeft\n    } else {\n      this.left = left\n    }\n    console.log(e, document.body.clientHeight-80,  e.pageY )\n    this.top = e.pageY - 80\n      console.log(this.top)\n  },\n    tableRowClassName({row, rowIndex}) {\n      if(row.is_hidden === '0') {\n         return 'hidden_row'\n       }else{\n         return ''\n       }\n    },\n    createGame() {\n     const postData = toJsonData.JsonData(this.editGameForm)\n      const isAdd = this.dialogType === 'add'\n      if(isAdd) {\n        SystemManager.createGame(postData,this.token).then(data => {\n          this.$message({\n            message: data.data.log,\n            type: 'success'\n          })\n          this.getGameIndex();\n          this.closeDialog();\n        })\n      }else{\n        SystemManager.editGame(postData, this.gameId, this.token).then(data => {\n          this.$message({\n            message: data.data.log,\n            type: 'success'\n          })\n          this.getGameIndex();\n          this.closeDialog();\n        })\n      }\n      this.editGameForm = {\n        title: '',\n        sku_game:'',\n        is_hidden: false\n      }\n    },\n    getGameIndex() {\n      SystemManager.getGameIndex(this.token).then(data => {\n        this.tableData = data.data\n      }).catch(error => {\n        console.log(error)\n      })\n    },\n    closeDialog() {\n      this.dialogEditFormVisible = false;\n    },\n    closeMenu() {\n      this.optionVisible = false\n    }\n  },\n  created() {\n    this.getGameIndex();\n  },\n  watch: {\n    optionVisible(value) {\n      if(value) {\n        document.body.addEventListener('click', this.closeMenu)\n      }else{\n        document.body.removeEventListener('click', this.closeMenu)\n      }\n    }\n  }\n}\n",null]}
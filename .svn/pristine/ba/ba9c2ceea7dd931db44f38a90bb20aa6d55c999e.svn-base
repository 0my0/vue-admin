{"remainingRequest":"E:\\vueProject\\admin\\vue-element-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\vueProject\\admin\\vue-element-admin\\src\\views\\sales\\first-hand\\goldordermanager\\gold-order-detail.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\vueProject\\admin\\vue-element-admin\\src\\views\\sales\\first-hand\\goldordermanager\\gold-order-detail.vue","mtime":1579056916079},{"path":"E:\\vueProject\\admin\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vueProject\\admin\\vue-element-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\vueProject\\admin\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vueProject\\admin\\vue-element-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Sales from '@/api/sales'\nimport { getToken} from  '@/utils/auth'\nimport toJsonData from '@/api/jsonformdata'\nexport default {\n  name:'gold-order-detail',\n  data() {\n    return{\n      formLabelWidth:'90px',\n      token:getToken(),\n      orderId:'',\n      tableData:'',\n      descData:[],\n      dataArr2:[],\n      formInline: {\n        note:''\n      },\n      handleOrderForm:{\n        order_number:'',\n        amount:'',\n        status:'',\n        note:'',\n        order_no:'',\n        service:''\n      },\n      handleStatusData:[],\n      dialogTableVisible:false,\n      inputData:'',\n      tableList:[],\n      emailList:[],\n      payData:[],\n      goodsData:[],\n      activeName:'first',\n      ManagerName:'userManager',\n      uploadData: {\n        dataType: \"0\",\n        oldFilePath:\"\"\n      },\n      verificationData:[],\n      mobileData:[],\n      emailData:[],\n      clientipData:[],\n      isRoles: false,\n      isMobile:false,\n      isRoledisabled: false,\n      isMobiledisabled:false,\n      isEmaildisabled:false,\n      isClientdisabled:false,\n      isEmail:false,\n      isClientip: false\n    }\n  },\n  methods:{\n      getOrderDetail(){\n        this.dataArr2 = [];\n        Sales.getOrderDetail(this.orderId,this.token).then(data => {\n          this.tableData = data.data;\n          this.tableList = this.tableData.list\n          this.emailList = this.tableData.email_list;\n          this.payData = this.tableData.payed;\n          this.goodsData = this.tableData.goods;\n          if (this.tableData.log) {\n            if(this.tableData.log.desc) {\n              for(let key in this.tableData.log.desc){\n                const value = this.tableData.log.desc[key];\n                const Obj ={};\n                Obj[key] = value\n                this.dataArr2 = this.dataArr2.concat(JSON.stringify(Obj).replace(\"{\",\"\").replace(\"}\",\"\").replace('\"',\"\").replace('\"',\"\").split('</br>'));\n              }\n            }\n          }\n          this.handleOrderForm={\n            order_number: this.tableData.order_number,\n            amount:this.tableData.amount,\n            status:this.tableData.status,\n            order_no:this.tableData.order_no,\n            service:this.tableData.service,\n            note:''\n          }\n        })\n      },\n    onCopy(e) {\n        // console.log(e)\n    },\n    handleOrder() {\n      this.dialogTableVisible = true;\n\n      this.getOrderStatus();\n    },\n    handleGoldOrder() {\n      const postData = toJsonData.JsonData(this.handleOrderForm);\n      Sales.handleGoldOrder(postData,this.orderId,this.token).then(data => {\n        this.$message({\n          message: data.data.log,\n          type: 'success'\n        })\n      })\n    },\n    copyData() {\n        Sales.copyData(this.orderId,this.token).then(data => {\n            this.inputData = data.data;\n        })\n    },\n    getOrderStatus() {\n      Sales.getOrderStatus(this.orderId, this.token).then(data=> {\n        this.handleStatusData = data.data;\n      })\n    },\n    goldDeatilLink(order_id){\n      this.orderId = order_id\n        this.$router.push({\n        path: \"/sales/first-hand/gold-order-detail\",\n        query: {\n          id: this.orderId\n        }\n      })\n      this.getOrderDetail();\n    },\n    getVerification(data) {\n      const handle = data\n      if (handle == 'name'){\n        Sales.getVerification(this.orderId,handle,this.token).then(data => {\n         this.isRoledisabled = true\n          this.verificationData = data.data\n          if(this.verificationData !== []){\n            this.isRoles = true\n          }else {\n            this.isRoles = false\n          }\n        })\n      }else if (handle == 'mobile'){\n        Sales.getVerification(this.orderId,handle,this.token).then(data => {\n         this.isMobiledisabled = true\n          this.mobileData = data.data\n          if(this.mobileData !== []) {\n            this.isMobile = true\n          }else {\n            this.isMobile = false\n          }\n        })\n      } else if (handle == 'email'){\n        Sales.getVerification(this.orderId,handle,this.token).then(data => {\n         this.isEmaildisabled = true;\n          this.emailData = data.data\n          if(this.emailData !== []) {\n            this.isEmail = true\n          }else {\n            this.isEmail = false\n          }\n        })\n      }else {\n        Sales.getVerification(this.orderId,handle,this.token).then(data => {\n          this.isClientdisabled = true\n          this.clientipData = data.data\n          if(this.clientipData !== []) {\n            this.isClientip = true\n          }else {\n            this.isClientip = false\n          }\n        })\n      }\n    },\n    imgClick($event) {\n        console.log($event)\n      if($event.currentTarget.className=='img'){\n        $event.currentTarget.className='img open';\n      }else{\n        $event.currentTarget.className='img';\n      }\n    },\n    uploadActionUrl() {\n        // this.getOrderDetail();\n        return 'order/upload/order_id/'+this.orderId+'/token/'+this.token\n    },\n    handlePreview() {\n        this.getOrderDetail();\n    },\n    isHidden(a,b,c) {\n     let data1 = this.tableData[a];\n        if(data1) {\n          let data2 = this.tableData[a][b];\n          if(data2) {\n            let data3 = this.tableData[a][b][c];\n            if (data3) {\n              return  data3\n            }else{\n              data3=''\n            }\n          }else {\n            data2 ='';\n          }\n        }else {\n          data1 = ''\n        }\n    },\n    addOrderLog() {\n        const postData = toJsonData.JsonData(this.formInline);\n        Sales.addOrderLog(postData,this.orderId,this.token).then(data => {\n          this.$message({\n            message: data.data.log,\n            type: 'success'\n          })\n          this.getOrderDetail();\n          this.formInline={\n            note:''\n          }\n        })\n    }\n  },\n  beforeRouteLeave(to, from, next) {\n    if (to.name == 'goldOrderManager') {\n      to.meta.isUseCache = true;\n    }\n    next();\n  },\n  watch: {\n    $route: {\n      handler: function(route) {\n        this.orderId = this.$route.query.id;\n        this.ManagerName = 'userManager';\n      },\n      immediate: true,\n    }\n  },\n  created() {\n    this.getOrderDetail();\n    this.copyData();\n  }\n}\n",null]}
{"remainingRequest":"E:\\vueProject\\admin\\vue-element-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\vueProject\\admin\\vue-element-admin\\src\\views\\sales\\first-hand\\goldordermanager\\gold-order-detail.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\vueProject\\admin\\vue-element-admin\\src\\views\\sales\\first-hand\\goldordermanager\\gold-order-detail.vue","mtime":1578904349936},{"path":"E:\\vueProject\\admin\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vueProject\\admin\\vue-element-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\vueProject\\admin\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vueProject\\admin\\vue-element-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Sales from '@/api/sales'\nimport { getToken} from  '@/utils/auth'\nimport toJsonData from '@/api/jsonformdata'\nexport default {\n  name:'gold-order-detail',\n  data() {\n    return{\n      formLabelWidth:'90px',\n      token:getToken(),\n      orderId:'',\n      tableData:'',\n      descData:[],\n      dataArr2:[],\n      formInline: {\n        note:''\n      },\n      tableList:[],\n      emailList:[],\n      payData:[],\n      goodsData:[],\n      activeName:'first',\n      uploadData: {\n        dataType: \"0\",\n        oldFilePath:\"\"\n      },\n    }\n  },\n  methods:{\n      getOrderDetail(){\n        Sales.getOrderDetail(this.orderId,this.token).then(data => {\n          this.tableData = data.data;\n          this.tableList = this.tableData.list\n          this.emailList = this.tableData.email_list;\n          this.payData = this.tableData.payed;\n          this.goodsData = this.tableData.goods;\n          if (this.tableData.log) {\n            if(this.tableData.log.desc) {\n              for(let key in this.tableData.log.desc){\n                const value = this.tableData.log.desc[key];\n                const Obj ={};\n                Obj[key] = value\n                this.dataArr2 = this.dataArr2.concat(JSON.stringify(Obj).replace(\"{\",\"\").replace(\"}\",\"\").replace('\"',\"\").replace('\"',\"\").split('</br>'));\n              }\n            }\n          }\n\n        })\n      },\n    getVerification(event) {\n        console.log(event.currentTargetã€‚v)\n        // Sales.getVerification()\n    },\n    imgClick($event) {\n        console.log($event)\n      if($event.currentTarget.className=='img'){\n        $event.currentTarget.className='img open';\n      }else{\n        $event.currentTarget.className='img';\n      }\n    },\n    uploadActionUrl() {\n        // this.getOrderDetail();\n        return 'order/upload/order_id/'+this.orderId+'/token/'+this.token\n    },\n    handlePreview() {\n        this.getOrderDetail();\n    },\n    isHidden(a,b,c) {\n     let data1 = this.tableData[a];\n        if(data1) {\n          let data2 = this.tableData[a][b];\n          if(data2) {\n            let data3 = this.tableData[a][b][c];\n            if (data3) {\n              return  data3\n            }else{\n              data3=''\n            }\n          }else {\n            data2 ='';\n          }\n        }else {\n          data1 = ''\n        }\n    },\n    addOrderLog() {\n        const postData = toJsonData.JsonData(this.formInline);\n        Sales.addOrderLog(postData,this.orderId,this.token).then(data => {\n          this.$message({\n            message: data.data.log,\n            type: 'success'\n          })\n          this.getOrderDetail();\n          this.formInline={\n            note:''\n          }\n        })\n    }\n  },\n  beforeRouteLeave(to, from, next) {\n    if (to.name == 'goldOrderManager') {\n      to.meta.isUseCache = true;\n    }\n    next();\n  },\n  watch: {\n    $route: {\n      handler: function(route) {\n        this.orderId = this.$route.query.id;\n      },\n      immediate: true\n    }\n  },\n  created() {\n    this.getOrderDetail();\n  }\n}\n",null]}
{"remainingRequest":"E:\\vueProject\\admin\\vue-element-admin\\node_modules\\babel-loader\\lib\\index.js!E:\\vueProject\\admin\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\vueProject\\admin\\vue-element-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\vueProject\\admin\\vue-element-admin\\src\\layout\\components\\AppMain.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\vueProject\\admin\\vue-element-admin\\src\\layout\\components\\AppMain.vue","mtime":1578642299422},{"path":"E:\\vueProject\\admin\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vueProject\\admin\\vue-element-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\vueProject\\admin\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vueProject\\admin\\vue-element-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"E:\\\\vueProject\\\\admin\\\\vue-element-admin\\\\node_modules\\\\@babel\\\\runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _auth = require(\"@/utils/auth\");\n\nvar _sales = _interopRequireDefault(require(\"@/api/sales\"));\n\nvar _jsonformdata = _interopRequireDefault(require(\"@/api/jsonformdata\"));\n\nvar _index = _interopRequireDefault(require(\"@/views/sales/first-hand/gold-order-manager/index.vue\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'AppMain',\n  components: {\n    goldOrderManager: _index.default\n  },\n  data: function data() {\n    return {\n      token: (0, _auth.getToken)(),\n      websock: null\n    };\n  },\n  computed: {\n    cachedViews: function cachedViews() {\n      return this.$store.state.tagsView.cachedViews;\n    },\n    key: function key() {\n      return this.$route.path;\n    }\n  },\n  methods: {\n    initWebSocket: function initWebSocket() {\n      var wsuri = \"ws://47.91.87.125:2346?token=123\";\n      this.websock = new WebSocket(wsuri);\n      this.websock.onmessage = this.websocketonmessage;\n      this.websock.onopen = this.websocketonopen;\n      this.websock.onerror = this.websocketonerror;\n      this.websock.onclose = this.websocketclose;\n    },\n    showMsgNotification: function showMsgNotification(title, msg) {\n      var Notification = window.Notification || window.mozNotification || window.webkitNotification;\n\n      if (Notification) {\n        if (Notification.permission == \"granted\") {\n          //已经允许通知\n          var instance = new Notification(title, {\n            body: msg,\n            icon: \"/static/images/ico.jpg\"\n          });\n\n          instance.onclick = function () {\n            //$('body').css({'background': 'red'});\n            //console.log('onclick');\n            instance.close();\n          };\n\n          instance.onerror = function () {//console.log('onerror');\n          };\n\n          instance.onshow = function () {\n            // 窗口显示 播放音频\n            // var audio = new Audio(\"./10418.wav\");\n            // audio.play();\n            // 窗口显示3S后关闭\n            setTimeout(function () {\n              notify.close();\n            }, 3000);\n          };\n\n          instance.onclose = function () {//console.log('onclose');\n          };\n        } else {\n          //第一次询问或已经禁止通知(如果用户之前已经禁止显示通知，那么浏览器不会再次询问用户的意见，Notification.requestPermission()方法无效)\n          Notification.requestPermission(function (status) {\n            //用户允许\n            if (status === \"granted\") {\n              var instance = new Notification(title, {\n                body: msg,\n                icon: \"images/reload.png\"\n              });\n\n              instance.onclick = function () {// Something to do\n              };\n\n              instance.onerror = function () {// Something to do\n              };\n\n              instance.onshow = function () {// Something to do\n              };\n\n              instance.onclose = function () {// Something to do\n              }; //用户禁止\n\n            } else {\n              return false;\n            }\n          });\n        }\n      } else {\n        //不支持(IE等)\n        var index = 0;\n        clearInterval(timer);\n        timer = setInterval(function () {\n          if (index % 2) {\n            $('title').text('【　　　】' + title); //这里是中文全角空格，其他不行\n          } else {\n            $('title').text('【新消息】' + title);\n          }\n\n          index++;\n\n          if (index > 20) {\n            clearInterval(timer);\n          }\n        }, 500);\n      }\n    },\n    websocketonmessage: function websocketonmessage(e) {\n      var _this = this;\n\n      //SOCKET收到信息\n      var redata = JSON.parse(e.data); //this.showMsgNotification('新订单', redata.msg)\n\n      switch (redata.type) {\n        case 'ping':\n          //console.log('ping')\n          break;\n\n        case 'ORDER':\n          console.log('add order ', redata.orderInfo);\n\n          var postData1 = _jsonformdata.default.JsonData(this.$refs.goldOrderManager.formInline);\n\n          _sales.default.searchLimitOrder(postData1, this.$refs.goldOrderManager.pageSize, this.$refs.goldOrderManager.currentPage, this.token).then(function (data) {\n            _this.$refs.goldOrderManager.tableData = data.data;\n            _this.$refs.goldOrderManager.totalCount = parseInt(data.count);\n            _this.$refs.goldOrderManager.orderAmount = data.amount + '(USD)';\n            _this.$refs.goldOrderManager.usdAmount = data.USD + 'USD';\n            _this.$refs.goldOrderManager.cadAmount = data.CAD + 'CAD';\n            _this.$refs.goldOrderManager.audAmount = data.AUD + 'AUD';\n            _this.$refs.goldOrderManager.eurAmount = data.EUR = 'EUR';\n            _this.$refs.goldOrderManager.youhuiAmount = data.youhui + 'USD';\n          });\n\n          var orderDetail = _jsonformdata.default.JsonData(redata.orderInfo);\n\n          _sales.default.postOrderData(orderDetail, this.token).then(function (data) {// this.showMsgNotification('新订单', redata.orderInfo.order_no)\n          });\n\n          break;\n\n        case 'ORDER_EDIT':\n          console.log('order_edit');\n\n          var postData = _jsonformdata.default.JsonData(this.$refs.goldOrderManager.formInline);\n\n          _sales.default.searchLimitOrder(postData, this.$refs.goldOrderManager.pageSize, this.$refs.goldOrderManager.currentPage, this.token).then(function (data) {\n            _this.$refs.goldOrderManager.tableData = data.data;\n            _this.$refs.goldOrderManager.totalCount = parseInt(data.count);\n            _this.$refs.goldOrderManager.orderAmount = data.amount + '(USD)';\n            _this.$refs.goldOrderManager.usdAmount = data.USD + 'USD';\n            _this.$refs.goldOrderManager.cadAmount = data.CAD + 'CAD';\n            _this.$refs.goldOrderManager.audAmount = data.AUD + 'AUD';\n            _this.$refs.goldOrderManager.eurAmount = data.EUR = 'EUR';\n            _this.$refs.goldOrderManager.youhuiAmount = data.youhui + 'USD';\n          });\n\n          break;\n\n        case 'ORDER_PAY':\n          console.log('ORDER_PAY');\n          console.log(redata);\n\n          var postData2 = _jsonformdata.default.JsonData(this.$refs.goldOrderManager.formInline);\n\n          _sales.default.searchLimitOrder(postData2, this.$refs.goldOrderManager.pageSize, this.$refs.goldOrderManager.currentPage, this.token).then(function (data) {\n            _this.$refs.goldOrderManager.tableData = data.data;\n            _this.$refs.goldOrderManager.totalCount = parseInt(data.count);\n            _this.$refs.goldOrderManager.orderAmount = data.amount + '(USD)';\n            _this.$refs.goldOrderManager.usdAmount = data.USD + 'USD';\n            _this.$refs.goldOrderManager.cadAmount = data.CAD + 'CAD';\n            _this.$refs.goldOrderManager.audAmount = data.AUD + 'AUD';\n            _this.$refs.goldOrderManager.eurAmount = data.EUR = 'EUR';\n            _this.$refs.goldOrderManager.youhuiAmount = data.youhui + 'USD';\n          });\n\n          var paySmg = {\n            'pay_smg': redata.pay_smg\n          };\n\n          var postData3 = _jsonformdata.default.JsonData(paySmg);\n\n          _sales.default.editOrderData(postData3, redata.order_no, this.token).then(function (data) {\n            console.log(data + '23445');\n\n            _this.showMsgNotification('新订单', redata.order_no);\n          });\n\n          break;\n      }\n    },\n    websocketonopen: function websocketonopen() {\n      console.log('发送数据');\n      var actions = {\n        \"type\": \"ping\"\n      };\n      setInterval(this.ping, 3000);\n    },\n    websocketonerror: function websocketonerror() {\n      this.initWebSocket();\n    },\n    websocketsend: function websocketsend(Data) {\n      this.websock.send(Data);\n    },\n    websocketclose: function websocketclose(e) {\n      console.log('断开连接', e);\n    },\n    ping: function ping() {\n      console.log('send ping');\n      this.websock.send('{\"type\":\"ping\"}');\n    }\n  },\n  created: function created() {\n    this.initWebSocket();\n  }\n};\nexports.default = _default;",null]}